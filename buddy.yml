- pipeline: "Build cluster"
  trigger_mode: "MANUAL"
  ref_name: "master"
  actions:
  - action: "Bootstrap the OS cluster"
    type: "BUILD"
    docker_image_name: "rodis/ansible-builder"
    docker_image_tag: "latest"
    execute_commands:
    - "source ./credentials"
    - >
        ansible-playbook
        -i .kargo/inventory
        --private-key /root/.ssh/k8s
        -e 'masters_num=2'
        -e 'nodes_num=3'
        -e 'masters_flavor=m1.small'
        -e 'nodes_flavor=m1.large'
        -e 'image=0d69bf12-e518-43d3-b5e5-5f3369a2d572'
        -e 'security_groups=default'
        up.yml
  - action: "Build Kubernetes"
    type: "BUILD"
    docker_image_name: "alpine"
    docker_image_tag: "latest"
    execute_commands:
    - "source ./credentials"
    - "rm -rf .kargo"
    - "git clone https://github.com/kubernetes-incubator/kargo .kargo"
    - "rm `ls -d -1 .kargo/inventory/* | grep -v group_vars`"
    - "cp inventory/openstack.py .kargo/inventory"
    - "cp inventory/static .kargo/inventory"
    - "chmod +x .kargo/inventory/openstack.py"
    - "cd .kargo"
    - >
        ansible-playbook
        -i inventory
        -e 'bootstrap_os=ubuntu'
        -e 'nginx_kube_apiserver_port=8443'
        -e 'kube_network_plugin=flannel'
        --ssh-extra-args='-o StrictHostKeyChecking=no'
        --private-key /root/.ssh/k8s
        -s -u ubuntu
        cluster.yml
    setup_commands:
    - "apk update"
    - "apk add python2 py2-pip gcc python2-dev musl-dev libffi-dev"
    - "apk add openssl-dev ca-certificates linux-headers coreutils git"
    - "pip install -U pip"
    - "pip install -U ansible"
    - "pip install -U shade"
- pipeline: "Reset"
  trigger_mode: "MANUAL"
  ref_name: "master"
  actions:
  - action: "Reset the kubenetes cluster"
    type: "BUILD"
    docker_image_name: "rodis/ansible-builder"
    docker_image_tag: "latest"
    execute_commands:
    - "source ./credentials"
    - "rm -rf .kargo"
    - "git clone https://github.com/kubernetes-incubator/kargo .kargo"
    - >
        ansible-playbook
        --private-key /root/.ssh/k8s
        -e reset_confirmation=yes
        -s -u ubuntu
        reset.yml